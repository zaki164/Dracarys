{"version":3,"file":"static/js/598.8710a4b0.chunk.js","mappings":"oSAgEA,EApDgB,WACd,IAAMA,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,GAAV,IAC7BC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAUC,EAAAA,EAAAA,UACZC,EAAMC,EAAAA,EAAAA,MAAU,SAAAC,GAClB,OAAOA,EAAIN,KAAOO,SAASP,EAC5B,IACD,GAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAYA,OAHAC,EAAAA,EAAAA,YAAU,WACRjB,EAASkB,MAAK,SAAAN,GAAG,OAAIA,EAAIN,KAAOI,EAAIJ,EAAnB,KAA0BU,GAAa,EACzD,GAAE,CAAChB,EAAUU,KAEZ,oBAASS,UAAU,qCAAnB,UACE,SAACC,EAAA,EAAD,WAEI,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGL,UAAU,cAA9B,UACE,gBAAKA,UAAU,uBAAf,UACE,gBAAKM,IAAKf,EAAIgB,IAAKC,IAAI,iBAG3B,SAACL,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGL,UAAU,sBAA9B,UACE,iBAAKA,UAAU,6CAAf,WACE,cAAGA,UAAU,MAAb,SAAoBT,EAAIkB,YACxB,cAAGT,UAAU,OAAb,SAAqBT,EAAImB,QACzB,eAAGV,UAAU,SAAb,qBAA6B,kCAA7B,KAA8C,SAAC,IAAD,CAAiBW,KAAMC,EAAAA,UACrE,iBAAKZ,UAAU,QAAf,WAAuB,kBAAMA,UAAU,eAAhB,cAAiCT,EAAIsB,SAActB,EAAIuB,WAAa,kBAAMd,UAAU,WAAhB,cAA6BT,EAAIuB,gBAC5H,cAAGd,UAAU,mBAAb,iIACA,iBAAMA,UAAU,MAAMe,IAAK1B,EAAS2B,QA5BlC,WACdnB,GAAcD,GAIZX,EAHGW,GAGMqB,EAAAA,EAAAA,IAAc1B,IAFd2B,EAAAA,EAAAA,IAAa3B,GAIzB,EAqBa,SAA0DK,GAAY,SAAC,IAAD,CAAiBe,KAAMQ,EAAAA,OAAc,SAAC,IAAD,CAAiBR,KAAMS,EAAAA,SAClI,iBAAKpB,UAAU,4BAAf,WACE,mBAAQA,UAAU,aAAagB,QAAS,kBAAM/B,GAASoC,EAAAA,EAAAA,IAAe9B,GAA9B,EAAxC,2BACA,SAAC,KAAD,CAAMS,UAAU,0BAA0BsB,GAAG,SAA7C,6BAEF,SAAC,KAAD,CAAMtB,UAAU,YAAYsB,GAAG,YAA/B,yCAQf,C,8LC5DYD,EAAkB,SAACE,GAC9B,MAAO,CACLC,KAAMC,EAAAA,GACNC,QAASH,EAEZ,EACYI,EAAmB,SAACJ,GAC/B,MAAO,CACLC,KAAMI,EAAAA,GACNF,QAASH,EAEZ,EACYL,EAAgB,SAACK,GAC5B,MAAO,CACLC,KAAMK,EAAAA,GACNH,QAASH,EAEZ,EACYN,EAAiB,SAACM,GAC7B,MAAO,CACLC,KAAMM,EAAAA,GACNJ,QAASH,EAEZ,EACYQ,EAAwB,SAACR,GACpC,MAAO,CACLC,KAAMQ,EAAAA,GACNN,QAASH,EAEZ,EACYU,EAAwB,SAACV,GACpC,MAAO,CACLC,KAAMU,EAAAA,GACNR,QAASH,EAEZ,C","sources":["Pages/Product/Product.jsx","redux/action/index.js"],"sourcesContent":["import { faHeart, faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHeart as regfaHeart } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useRef, useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Data } from '../../constants';\r\nimport { addItemtofav, addItemtochart, deleteFavItem } from '../../redux/action';\r\nimport { useEffect } from 'react';\r\nimport './Product.scss';\r\n\r\nconst Product = () => {\r\n  const favItems =  useSelector(state => state.fav);\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const svgicon = useRef()\r\n  let myp = Data.find(ele => {\r\n    return ele.id === parseInt(id)\r\n  })\r\n  const [togglefav, settogglefav] = useState(false)\r\n  let handlefav = () => {\r\n    settogglefav(!togglefav);\r\n    if (!togglefav) {\r\n      dispatch(addItemtofav(myp))\r\n    } else {\r\n      dispatch(deleteFavItem(myp))\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    favItems.some(ele => ele.id === myp.id) && settogglefav(true) \r\n  }, [favItems, myp])\r\n  return (\r\n    <section className='Product section_padding min-vh-100'>\r\n      <Container>\r\n        {\r\n          <Row>\r\n            <Col xs={12} md={6} className=\"flex_center\">\r\n              <div className=\"Product_image_holder\">\r\n                <img src={myp.img} alt=\"product\" />\r\n              </div>\r\n            </Col>\r\n            <Col xs={12} md={6} className=\"flex_center mt-sm-4\">\r\n              <div className=\"product_info flex_center flex-column gap-2\">\r\n                <p className='cat'>{myp.category}</p>\r\n                <p className='name'>{myp.name}</p>\r\n                <p className='rating'>Rating <span>4.9</span> <FontAwesomeIcon icon={faStar} /></p>\r\n                <div className='price'><span className='currentPrice'>${myp.price}</span>{myp.oldprice && (<span className='oldprice'>${myp.oldprice}</span>)}</div>\r\n                <p className='text text-center'>This Product is Great to choose, You Will be A Special, And You should Follow Us Because our Amazing Next Products</p>\r\n                <span className='fav' ref={svgicon} onClick={handlefav}>{ togglefav ? <FontAwesomeIcon icon={faHeart} /> : <FontAwesomeIcon icon={regfaHeart} />}</span>\r\n                <div className=\"linkstochart d-flex gap-2\">\r\n                  <button className='addtochart' onClick={() => dispatch(addItemtochart(myp))}>Add To Chart</button>\r\n                  <Link className='gotochart custom_button' to='/Chart'>Go To Chart</Link>\r\n                </div>\r\n                <Link className='backtopro' to=\"/Products\">Back To Products</Link>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </Container>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Product","import { AddToChart, RemoveChartItem, RemoveFavItem, AddToFav, IncreaseItem, DecreaseItem } from './type';\r\n\r\nexport const addItemtochart  = (product) => {\r\n  return {\r\n    type: AddToChart,\r\n    payload: product\r\n  }\r\n}\r\nexport const deleteChartItem  = (product) => {\r\n  return {\r\n    type: RemoveChartItem,\r\n    payload: product\r\n  }\r\n}\r\nexport const addItemtofav  = (product) => {\r\n  return {\r\n    type: AddToFav,\r\n    payload: product\r\n  }\r\n}\r\nexport const deleteFavItem  = (product) => {\r\n  return {\r\n    type: RemoveFavItem,\r\n    payload: product\r\n  }\r\n}\r\nexport const increaseItemQuantity  = (product) => {\r\n  return {\r\n    type: IncreaseItem,\r\n    payload: product\r\n  }\r\n}\r\nexport const decreaseItemQuantity  = (product) => {\r\n  return {\r\n    type: DecreaseItem,\r\n    payload: product\r\n  }\r\n}"],"names":["favItems","useSelector","state","fav","dispatch","useDispatch","id","useParams","svgicon","useRef","myp","Data","ele","parseInt","useState","togglefav","settogglefav","useEffect","some","className","Container","Row","Col","xs","md","src","img","alt","category","name","icon","faStar","price","oldprice","ref","onClick","deleteFavItem","addItemtofav","faHeart","regfaHeart","addItemtochart","to","product","type","AddToChart","payload","deleteChartItem","RemoveChartItem","AddToFav","RemoveFavItem","increaseItemQuantity","IncreaseItem","decreaseItemQuantity","DecreaseItem"],"sourceRoot":""}